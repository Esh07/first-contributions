name: Auto-merge PRs
on:
  pull_request_target:
    types: [opened, synchronize]
    paths:
      - 'Contributors.md' # <- only run if only contributors file changed
    
jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      
    steps:
      
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
        
      # Check if the pull request only modifies the Contributors.md file
      - name: Check if PR only modifies Contributors.md
        id: is_only_contributors_file_changed
        run: |
          # Get a list of files changed in the pull request
          PR_FILES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '.[].filename')
          FILES_CHANGED=$(echo $PR_FILES | tr '\n' ' ')

          echo "files_changed=$FILES_CHANGED" >> $GITHUB_ENV
          
          if [[ "${FILES_CHANGED// /}" == "Contributors.md" ]]; then

            echo "only_contributors=true" >> $GITHUB_ENV
          else
            echo "only_contributors=false" >> $GITHUB_ENV
          fi

      # Merge the pull request if it only modifies the Contributors.md file or if it fail to do then drop failure message as post 
      - name: Merge PR
        id: merge_pr
        if: env.only_contributors == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Attempt to merge the pull request using the squash method
             const response = await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
               merge_method: "squash"
             })
            // Check if the merge was successful by checking the status code of the response
             if (response.status === 200) {

                const getMergeMessage = username => `Hello @${username}, congratulations! You've successfully submitted a pull request. ðŸŽ‰
                
                // Generate the merge message using the getMergeMessage function
                const message = getMergeMessage(context.payload.pull_request.user.login);
                
                If you liked the tutorial, please star this repo by clicking star button on top right of this page.
                <img alt="star screenshot" title="star button" src="https://firstcontributions.github.io/assets/star.png">


                # Next steps
                - Continue contributing: If you're looking for projects to contribute to, checkout our [<img src="https://avatars0.githubusercontent.com/u/65761570?s=88&u=640f39b808c75c6b86460aa907dd030bcca2f3c7&v=4" width="22" title="web app" /> webapp](https://firstcontributions.github.io).
                - Join our slack group: We have a community to help/support contributors. [<img src="https://edent.github.io/SuperTinyIcons/images/svg/slack.svg" width="22" title="Slack" /> Join slack group](https://join.slack.com/t/firstcontributors/shared_invite/zt-1n4y7xnk0-DnLVTaN6U9xLU79H5Hi62w).
                - Share on social media: You can share this content to help more people. [ <img alt="twitter" title="twitter" src="https://edent.github.io/SuperTinyIcons/images/svg/twitter.svg" width="22"> tweet](https://twitter.com/intent/tweet?text=Yay%21%20I%20just%20made%20my%20first%20open%20source%20contribution%20with%20@1stcontribution.%20You%20can%20too%20at%20https%3A//goo.gl/66Axwe%0A&hashtags=OpenSource,CodeNewbie). [<img alt="twitter" title="twitter" src="https://edent.github.io/SuperTinyIcons/images/svg/facebook.svg" width="22"> share](https://www.facebook.com/sharer/sharer.php?u=https://roshanjossey.github.io/first-contributions&quote=Yay%21%20I%20just%20made%20my%20first%20open%20source%20contribution%20with%20First%20Contributions.%20You%20can%20too,%20by%20following%20a%20simple%20tutorial%20at%20https%3A//goo.gl/66Axwe&hashtag=%23OpenSource)

                We'd love to hear your thoughts about this project. Let us know how we can improve by commenting or opening an issue here.

                ![celebration gif](${getRandomGif()})`;

                const celebrationGifs = [
                'https://c.tenor.com/ZCq4SwgCfxAAAAAC/snoopy-peanuts.gif',
                'https://c.tenor.com/Z0ojZS2kpO0AAAAC/milk-and-mocha-happy.gif',
                'https://c.tenor.com/LffD4a8ET9AAAAAC/heart-celebrate.gif',
                'https://c.tenor.com/HJ0iSKwIG28AAAAC/yes-baby.gif',
                'https://c.tenor.com/4blWuIh5MIYAAAAC/baby-yoda.gif',
                'https://c.tenor.com/B_zYdea4l-4AAAAC/yay-minions.gif',
                'https://media1.giphy.com/media/artj92V8o75VPL7AeQ/giphy.gif',
                'https://media2.giphy.com/media/IwAZ6dvvvaTtdI8SD5/giphy.gif',
                'https://media0.giphy.com/media/z8gtBVdZVrH20/giphy.gif',
                'https://media2.giphy.com/media/26gN16cJ6gy4LzZSw/giphy.gif',
                'https://media1.giphy.com/media/LZElUsjl1Bu6c/giphy.gif',
                'https://media1.giphy.com/media/gHnwTttExPf4nwOWm7/giphy.gif',
                ]

                const getRandomGif = () => celebrationGifs[Math.floor(Math.random() * celebrationGifs.length)]

                // Set the merged output variable to 'true'
                 core.setOutput('merged', 'true')
                   await github.rest.issues.createComment({
                     owner: context.repo.owner,
                     repo: context.repo.repo,
                     issue_number: context.issue.number,
                     // body: "Hello @" + context.payload.pull_request.user.login + ", congratulations! You've successfully submitted a pull request. ðŸŽ‰\n\nThanks for your contribution!\n\nIf you liked the tutorial, please star this repo by clicking the star button on the top right of this page. ![](https://camo.githubusercontent.com/e2821336f0dc5009292b8357ad4599e765aa17ad3837420b41db6c59cbbff3a8/68747470733a2f2f6669727374636f6e747269627574696f6e732e6769746875622e696f2f6173736574732f737461722e706e67)\n\n# Next steps\n- Continue contributing: If you're looking for projects to contribute to, checkout our web app [webapp](https://firstcontributions.github.io/).\n- Join our slack group: We have a community to help/support contributors. Slack [Join slack group](https://join.slack.com/t/firstcontributors/shared_invite/zt-vchl8cde-S0KstI_jyCcGEEj7rSTQiA).\n- Share on social media: You can share this content to help more people. Twitter [tweet](https://twitter.com/intent/tweet?text=Yay%21%20I%20just%20made%20my%20first%20open%20source%20contribution%20with%20@1stcontribution.%20You%20can%20too%20at%20https%3A//goo.gl/66Axwe%0A&hashtags=OpenSource,CodeNewbie). Facebook [share](https://www.facebook.com/sharer/sharer.php?u=https://roshanjossey.github.io/first-contributions&quote=Yay%21%20I%20just%20made%20my%20first%20open%20source%20contribution%20with%20First%20Contributions.%20You%20can%20too,%20by%20following%20a%20simple%20tutorial%20at%20https%3A//goo.gl/66Axwe&hashtag=%23OpenSource)\n\nWe'd love to hear your thoughts about this project. Let us know how we can improve by commenting or opening an issue here."
                     body: message
                   })
             } else {
              
              // Post a comment on the pull request using the createComment method
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "Something went wrong while attempting to merge this pull request. Please check the GitHub Actions log for more information."
               })
            }





      # Post a comment on the pull request if it was not merged automatically
      - name: Post comment on PR if not merged automatically
        # Check if the pull request only modifies the CONTRIBUTORS.md file
        if: env.only_contributors != 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const body = `Thank you for your pull request. This pull request contains changes in files which requires review. The following files were changed:\n\n  ${process.env.files_changed.trim() ? `\n\n${process.env.files_changed.trim().split(' ').map(file => `- ${file}`).join('\n')}` : ''}`
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
            
          github-token: ${{ secrets.GITHUB_TOKEN }}
